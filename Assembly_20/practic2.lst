     1                                  ; Se citeste un mesaj de la tastatura codat prin rotirea literelor o data la stanga, iar apoi prin tranformarea fiecarei lit in codul ascii
     2                                  ; sa se afiseze 
     3                                  
     4                                  bits 32 
     5                                  global start
     6                                  extern exit, fprintf, fopen, scanf, fclose, fread, printf
     7                                  
     8                                  import exit msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import fread msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fwrite msvcrt.dll
    13                                  import fopen msvcrt.dll
    14                                  import fprintf msvcrt.dll
    15                                  import scanf msvcrt.dll
    16                                  
    17                                  segment data use32 class = data 
    18                                  
    19 00000000 74657874322E747874-         file_name db 'text2.txt', 0
    19 00000009 00                 
    20 0000000A 7700                        write_mod db 'w', 0
    21 0000000C FFFFFFFF                    handler dd -1
    22 00000010 257300                      format db "%s", 0
    23 00000013 <res 00000064>              s resb 100
    24 00000077 <res 00000064>              d resb 100
    25 000000DB 776F7264203D200000-         message dd 'word = ', 0
    25 000000E4 000000             
    26                                      
    27                                  
    28                                  segment code use32 class = code
    29                                  start:
    30                                   
    31                                      ; fopen(file_name, mod)
    32 00000000 68[0A000000]                push dword write_mod
    33 00000005 68[00000000]                push dword file_name
    34 0000000A FF15[00000000]              call [fopen]
    35 00000010 83C408                      add esp, 4 * 2
    36                                      
    37 00000013 A3[0C000000]                mov dword [handler], eax
    38 00000018 83F800                      cmp eax, 0 
    39 0000001B 745F                        je final
    40                                      
    41                                      ;call printf (message, value)
    42 0000001D 68[DB000000]                push dword message
    43 00000022 FF15[00000000]              call [printf]
    44 00000028 83C404                      add esp, 4
    45                                      
    46                                      ;call scanf(format, variablia)
    47 0000002B 68[13000000]                push dword s
    48 00000030 68[10000000]                push dword format
    49 00000035 FF15[00000000]              call [scanf]
    50 0000003B 83C408                      add esp, 4 * 2
    51                                      
    52                                      
    53 0000003E BE[13000000]                mov esi, s
    54 00000043 BF[77000000]                mov edi, d
    55                                      myloop:
    56 00000048 AC                              lodsb
    57 00000049 3C00                            cmp al, 0
    58 0000004B 7407                            je stop
    59                                          
    60 0000004D B101                            mov cl, 1
    61 0000004F D2C8                            ror al, cl 
    62 00000051 AA                              stosb
    63 00000052 EBF4                        jmp myloop
    64                                      stop:
    65                                      
    66                                      
    67                                      ; call fprinf (desc, mod , value)
    68 00000054 68[77000000]                push dword d
    69 00000059 68[10000000]                push dword format
    70 0000005E FF35[0C000000]              push dword [handler]
    71 00000064 FF15[00000000]              call [fprintf]
    72 0000006A 83C40C                      add esp, 4 *3
    73                                          
    74                                      
    75                                      close:
    76                                      ; call fclose for the file 
    77                                      ; fclose(handler)
    78 0000006D FF35[0C000000]              push dword [handler]
    79 00000073 FF15[00000000]              call [fclose]
    80 00000079 83C404                      add esp, 4
    81                                  
    82                                  
    83                                      final:
    84 0000007C 6A00                        push dword 0
    85 0000007E FF15[00000000]              call [exit]
    86                                  
